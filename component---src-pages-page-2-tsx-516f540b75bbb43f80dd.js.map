{"version":3,"sources":["webpack:///./src/pages/page-2.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/styles/variables.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Container.tsx","webpack:///./src/styles/mixins.ts","webpack:///./src/components/Page.tsx","webpack:///./src/styles/normalize.ts","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx"],"names":["PageTwo","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_5__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","_components_Container__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","colors","fonts","breakpoints","widths","dimensions","heights","brand","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","sansSerif","serif","monospace","xs","sm","md","lg","xl","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","header","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","StyledContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","getEmSize","Container","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_variables__WEBPACK_IMPORTED_MODULE_0__","size","StyledPage","Page","normalize","StyledHeader","styled_base_browser_esm","transparentize","HeaderInner","name","styles","HomepageLink","Link","Header","title","core_browser_esm","StyledLayoutRoot","LayoutRoot","react","css","StyledLayoutMain","LayoutMain","IndexLayout","gatsby_browser_entry","components_LayoutRoot","Helmet_default","a","site","siteMetadata","meta","content","description","components_Header","components_LayoutMain","_991718019"],"mappings":"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","file":"component---src-pages-page-2-tsx-516f540b75bbb43f80dd.js","sourcesContent":["import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport Page from '../components/Page';\nimport Container from '../components/Container';\nimport IndexLayout from '../layouts';\n\nconst PageTwo = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>Hi from the second page</h1>\n        <p>Welcome to page 2</p>\n        <ul>\n          <li>\n            <Link to=\"/a-markdown-page/\">Show me some Markdown!</Link>\n          </li>\n          <li>\n            <Link to=\"/\">Take me back home.</Link>\n          </li>\n        </ul>\n      </Container>\n    </Page>\n  </IndexLayout>\n);\n\nexport default PageTwo;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/* tslint:disable:max-line-length */\n\nexport const colors = {\n  brand: '#663399',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: '#000'\n};\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n};\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n};\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n};\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n};\n\nexport const heights = {\n  header: 60\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { widths } from '../styles/variables';\nimport { getEmSize } from '../styles/mixins';\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`;\n\ninterface ContainerProps {\n  className?: string;\n}\n\nconst Container: React.SFC<ContainerProps> = ({ children, className }) => (\n  <StyledContainer className={className}>{children}</StyledContainer>\n);\n\nexport default Container;\n","import { dimensions } from './variables';\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { dimensions } from '../styles/variables';\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`;\n\ninterface PageProps {\n  className?: string;\n}\n\nconst Page: React.SFC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>;\n\nexport default Page;\n","import { dimensions, fonts, colors, breakpoints } from './variables';\nimport { getEmSize } from './mixins';\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.white};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { transparentize } from 'polished';\nimport { Link } from 'gatsby';\n\nimport { heights, dimensions, colors } from '../styles/variables';\nimport Container from './Container';\n\nconst StyledHeader = styled.header`\n  height: ${heights.header}px;\n  padding: 0 ${dimensions.containerPadding}rem;\n  background-color: ${colors.brand};\n  color: ${transparentize(0.5, colors.white)};\n`;\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`;\n\nconst HomepageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`;\n\ninterface HeaderProps {\n  title: string;\n}\n\nconst Header: React.SFC<HeaderProps> = ({ title }) => (\n  <StyledHeader>\n    <HeaderInner>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n    </HeaderInner>\n  </StyledHeader>\n);\n\nexport default Header;\n","import * as React from 'react';\nimport { Global, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport normalize from '../styles/normalize';\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface LayoutRootProps {\n  className?: string;\n}\n\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n);\n\nexport default LayoutRoot;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\ninterface LayoutMainProps {\n  className?: string;\n}\n\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n);\n\nexport default LayoutMain;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport 'modern-normalize';\nimport '../styles/normalize';\n\nimport Header from '../components/Header';\nimport LayoutRoot from '../components/LayoutRoot';\nimport LayoutMain from '../components/LayoutMain';\n\ntype StaticQueryProps = {\n  site: {\n    siteMetadata: {\n      title: string;\n      description: string;\n    };\n  };\n};\n\nconst IndexLayout: React.SFC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: 'gatsbyjs, gatsby, javascript, sample, something' }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n);\n\nexport default IndexLayout;\n"],"sourceRoot":""}